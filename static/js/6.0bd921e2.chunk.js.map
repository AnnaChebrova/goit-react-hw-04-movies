{"version":3,"sources":["components/ApiService.js","components/Cast.js","components/Rewiew.js","components/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","KEY","getMovie","get","then","response","data","results","getMovieInfo","movie_id","getCast","cast","getReview","MovieSearch","query","Cast","movieId","useParams","useState","setCast","useEffect","API","map","actor","profile_path","src","alt","name","character","id","Rewiews","rewiews","setRewiews","length","rewiew","author","content","MovieDetailsPage","history","useHistory","location","useLocation","useRouteMatch","url","path","movie","setMovie","movieInfo","onClick","push","state","from","className","styles","btnBack","poster_path","title","vote_average","overview","genres","genre","to","Rewiew"],"mappings":"yIAAA,qBACAA,IAAMC,SAASC,QAAU,gCACzB,IAAMC,EAAG,mCAkCM,KACfC,SAjCiB,WACf,OAAOJ,IACJK,IADI,oCAC6BF,IACjCG,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,YA+BtCC,aA5BqB,SAACC,GACpB,OAAOX,IACJK,IADI,iBACUM,EADV,oBAC8BR,EAD9B,oBAEJG,MAAK,SAACC,GAAD,OAAcA,EAASC,SA0B/BI,QAvBc,SAACD,GACf,OAAOX,IACJK,IADI,iBACUM,EADV,4BACsCR,IAC1CG,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKK,SAqBtCC,UAlBkB,SAACH,GACjB,OAAOX,IACJK,IADI,iBACUM,EADV,4BACsCR,IAC1CG,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,YAgBpCM,YAbkB,SAACC,GACnB,OAAOhB,IACJK,IADI,gCAEsBF,EAFtB,wCAEyDa,IAE7DV,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,c,+HC7BvB,SAASQ,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAAwBE,mBAAS,IAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KAMA,OAJAC,qBAAU,WACVC,IAAIX,QAAQM,GAASZ,KAAKe,KACzB,CAACH,IAGE,+BACCL,GACCA,EAAKW,KAAI,SAAAC,GAAK,OACZ,+BACGA,EAAMC,cACL,qBACEC,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAKH,EAAMI,OAGf,4BAAIJ,EAAMI,OACV,2CACA,4BAAIJ,EAAMK,cATHL,EAAMM,OAHnB,OCTN,IAuBeC,EAvBC,WACd,IAAQd,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,MAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KAMA,OAJDZ,qBAAU,WACVC,IAAIT,UAAUI,GAASZ,KAAK4B,KAC1B,CAAChB,IAEEe,GAAWA,EAAQE,OAAS,EAE5B,6BACGF,EAAQT,KAAI,SAAAY,GAAM,OACjB,+BACE,6BAAKA,EAAOC,SACZ,4BAAID,EAAOE,YAFJF,EAAOL,SAQjB,yE,gBCfM,SAASQ,IACtB,IAAMC,EAAUC,cACVC,EAAWC,cACTzB,EAAYC,cAAZD,QACR,EAAsB0B,cAAdC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KACb,EAA0B1B,mBAAS,MAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KAEA1B,qBAAU,WACVC,IAAIb,aAAaQ,GAASZ,MAAK,SAAA2C,GAAS,OAAID,EAASC,QAClD,CAAC/B,IAMJ,OACE,gCACE,wBAAQgC,QANI,WAAO,IAAD,IACpBV,EAAQW,KAAR,iBAAaT,QAAb,IAAaA,GAAb,UAAaA,EAAUU,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,MAKVC,UAAWC,IAAOC,QAA5C,qBAICT,GACC,gCACE,qBACEpB,IAAG,0CAAqCoB,EAAMU,aAC9C7B,IAAKmB,EAAMW,QAEb,gCACE,6BAAKX,EAAMW,QACX,6CAAqC,GAArBX,EAAMY,aAAtB,OAEA,0CACA,4BAAIZ,EAAMa,WAEV,wCACA,4BAAIb,EAAMc,OAAOrC,KAAI,SAAAsC,GAAK,gBAAOA,EAAMjC,iBAI7C,gCACE,wDACA,+BACE,6BACE,cAAC,IAAD,CAASkC,GAAE,UAAKlB,EAAL,SAAX,oBAEF,6BACE,cAAC,IAAD,CAASkB,GAAE,UAAKlB,EAAL,YAAX,0BAIJ,cAAC,IAAD,CAAOC,KAAI,UAAKA,EAAL,SAAX,SACE,cAAC7B,EAAD,MAEF,cAAC,IAAD,CAAO6B,KAAI,UAAKA,EAAL,YAAX,SACE,cAACkB,EAAD","file":"static/js/6.0bd921e2.chunk.js","sourcesContent":["import axios from 'axios';\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\nconst KEY = `eecf8c65fd813ef076ac9f633cd2051a`;\r\n\r\nconst getMovie = () => {\r\n  return axios\r\n    .get(`/trending/all/day?api_key=${KEY}`)\r\n    .then((response) => response.data.results);\r\n};\r\n\r\nconst getMovieInfo = (movie_id) => {\r\n  return axios\r\n    .get(`/movie/${movie_id}?api_key=${KEY}&language=en-US`)\r\n    .then((response) => response.data);\r\n};\r\n\r\nconst getCast = (movie_id) => {\r\n  return axios\r\n    .get(`/movie/${movie_id}/credits?api_key=${KEY}`)\r\n    .then((response) => response.data.cast);\r\n};\r\n\r\nconst getReview = (movie_id) => {\r\n  return axios\r\n    .get(`/movie/${movie_id}/reviews?api_key=${KEY}`)\r\n    .then((response) => response.data.results);\r\n};\r\n\r\nconst MovieSearch = (query) => {\r\n  return axios\r\n    .get(\r\n      `/search/movie?api_key=${KEY}&language=en-US&page=1&query=${query}`\r\n    )\r\n    .then((response) => response.data.results);\r\n};\r\n\r\nexport default {\r\ngetMovie,\r\ngetMovieInfo,\r\n  getCast,  \r\ngetReview,\r\n  MovieSearch\r\n};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport API from './ApiService';\r\n\r\nexport default function Cast() {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n  API.getCast(movieId).then(setCast);\r\n}, [movieId]);\r\n    \r\n  return (\r\n      <ul>\r\n      {cast &&\r\n        cast.map(actor => (\r\n          <li key={actor.id}>\r\n            {actor.profile_path && (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\r\n                alt={actor.name}\r\n              />\r\n            )}\r\n            <p>{actor.name}</p>\r\n            <p>Character:</p>\r\n            <p>{actor.character}</p>\r\n          </li>\r\n        ))};\r\n    </ul>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport API from './ApiService';\r\n\r\nconst Rewiews = () => {\r\n  const { movieId } = useParams();\r\n  const [rewiews, setRewiews] = useState(null);\r\n\r\n useEffect(() => {\r\n API.getReview(movieId).then(setRewiews);\r\n}, [movieId]);\r\n\r\n  if (rewiews && rewiews.length > 0) {\r\n    return (\r\n      <ul>\r\n        {rewiews.map(rewiew => (\r\n          <li key={rewiew.id}>\r\n            <h3>{rewiew.author}</h3>\r\n            <p>{rewiew.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n  return <p>We don't have any rewiew for this movie</p>;\r\n};\r\n\r\nexport default Rewiews;","import { NavLink, Route, useRouteMatch } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useLocation, useHistory } from 'react-router';\r\nimport API from './ApiService';\r\nimport Cast from './Cast';\r\nimport Rewiews from './Rewiew';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nexport default function MovieDetailsPage() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { movieId } = useParams();\r\n  const { url, path } = useRouteMatch();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n  API.getMovieInfo(movieId).then(movieInfo => setMovie(movieInfo));\r\n  }, [movieId]); \r\n\r\n  const BtnBack = () => {\r\n    history.push(location?.state?.from ?? '/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={BtnBack} className={styles.btnBack}>\r\n        Go Back\r\n      </button>\r\n\r\n      {movie && (\r\n        <div>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\r\n            alt={movie.title}\r\n          />\r\n          <div>\r\n            <h1>{movie.title}</h1>\r\n            <p>User Score: {movie.vote_average * 10}%</p>\r\n\r\n            <h2>Overview</h2>\r\n            <p>{movie.overview}</p>\r\n\r\n            <h2>Genres</h2>\r\n            <p>{movie.genres.map(genre => `${genre.name}`)}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <h3>Additional information</h3>\r\n        <ul>\r\n          <li>\r\n            <NavLink to={`${url}/cast`}>Cast</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to={`${url}/rewiews`}>Rewiews</NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        <Route path={`${path}/cast`}>\r\n          <Cast />\r\n        </Route>\r\n        <Route path={`${path}/rewiews`}>\r\n          <Rewiews />\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}